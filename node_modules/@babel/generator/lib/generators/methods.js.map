{"version":3,"names":["isIdentifier","_params","node","print","typeParameters","token","_parameters","params","_noLineTerminator","returnType","type","parameters","parent","paramLength","length","i","_param","space","parameter","printJoin","decorators","optional","typeAnnotation","_methodHead","kind","key","word","async","generator","computed","_predicate","noLineTerminatorAfter","predicate","_functionHead","_endsWithInnerRaw","id","FunctionExpression","body","ArrowFunctionExpression","firstParam","format","retainLines","hasTypesOrComments","printInnerComments","param","leadingComments","trailingComments"],"sources":["../../src/generators/methods.ts"],"sourcesContent":["import type Printer from \"../printer\";\nimport { isIdentifier } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\nexport function _params(\n  this: Printer,\n  node: t.Function | t.TSDeclareMethod | t.TSDeclareFunction,\n) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this._parameters(node.params, node);\n  this.token(\")\");\n  this._noLineTerminator = true;\n\n  this.print(node.returnType, node, node.type === \"ArrowFunctionExpression\");\n}\n\nexport function _parameters(\n  this: Printer,\n  parameters: t.Function[\"params\"],\n  parent:\n    | t.Function\n    | t.TSIndexSignature\n    | t.TSDeclareMethod\n    | t.TSDeclareFunction\n    | t.TSFunctionType\n    | t.TSConstructorType,\n) {\n  const paramLength = parameters.length;\n  for (let i = 0; i < paramLength; i++) {\n    this._param(parameters[i], parent);\n\n    if (i < parameters.length - 1) {\n      this.token(\",\");\n      this.space();\n    }\n  }\n}\n\nexport function _param(\n  this: Printer,\n  parameter: t.Identifier | t.RestElement | t.Pattern | t.TSParameterProperty,\n  parent?:\n    | t.Function\n    | t.TSIndexSignature\n    | t.TSDeclareMethod\n    | t.TSDeclareFunction\n    | t.TSFunctionType\n    | t.TSConstructorType,\n) {\n  this.printJoin(parameter.decorators, parameter);\n  this.print(parameter, parent);\n  if (\n    // @ts-expect-error optional is not in TSParameterProperty\n    parameter.optional\n  ) {\n    this.token(\"?\"); // TS / flow\n  }\n\n  this.print(\n    // @ts-expect-error typeAnnotation is not in TSParameterProperty\n    parameter.typeAnnotation,\n    parameter,\n  ); // TS / flow\n}\n\nexport function _methodHead(this: Printer, node: t.Method | t.TSDeclareMethod) {\n  const kind = node.kind;\n  const key = node.key;\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.word(kind);\n    this.space();\n  }\n\n  if (node.async) {\n    this.word(\"async\", true);\n    this.space();\n  }\n\n  if (\n    kind === \"method\" ||\n    // @ts-expect-error Fixme: kind: \"init\" is not defined\n    kind === \"init\"\n  ) {\n    if (node.generator) {\n      this.token(\"*\");\n    }\n  }\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(key, node);\n    this.token(\"]\");\n  } else {\n    this.print(key, node);\n  }\n\n  if (\n    // @ts-expect-error optional is not in ObjectMethod\n    node.optional\n  ) {\n    // TS\n    this.token(\"?\");\n  }\n\n  this._params(node);\n}\n\nexport function _predicate(\n  this: Printer,\n  node:\n    | t.FunctionDeclaration\n    | t.FunctionExpression\n    | t.ArrowFunctionExpression,\n  noLineTerminatorAfter?: boolean,\n) {\n  if (node.predicate) {\n    if (!node.returnType) {\n      this.token(\":\");\n    }\n    this.space();\n    this.print(node.predicate, node, noLineTerminatorAfter);\n  }\n}\n\nexport function _functionHead(\n  this: Printer,\n  node: t.FunctionDeclaration | t.FunctionExpression | t.TSDeclareFunction,\n) {\n  if (node.async) {\n    this.word(\"async\");\n    // We prevent inner comments from being printed here,\n    // so that they are always consistently printed in the\n    // same place regardless of the function type.\n    this._endsWithInnerRaw = false;\n    this.space();\n  }\n  this.word(\"function\");\n  if (node.generator) {\n    // We prevent inner comments from being printed here,\n    // so that they are always consistently printed in the\n    // same place regardless of the function type.\n    this._endsWithInnerRaw = false;\n    this.token(\"*\");\n  }\n\n  this.space();\n  if (node.id) {\n    this.print(node.id, node);\n  }\n\n  this._params(node);\n  if (node.type !== \"TSDeclareFunction\") {\n    this._predicate(node);\n  }\n}\n\nexport function FunctionExpression(this: Printer, node: t.FunctionExpression) {\n  this._functionHead(node);\n  this.space();\n  this.print(node.body, node);\n}\n\nexport { FunctionExpression as FunctionDeclaration };\n\nexport function ArrowFunctionExpression(\n  this: Printer,\n  node: t.ArrowFunctionExpression,\n) {\n  if (node.async) {\n    this.word(\"async\", true);\n    this.space();\n  }\n\n  // Try to avoid printing parens in simple cases, but only if we're pretty\n  // sure that they aren't needed by type annotations or potential newlines.\n  let firstParam;\n  if (\n    !this.format.retainLines &&\n    node.params.length === 1 &&\n    isIdentifier((firstParam = node.params[0])) &&\n    !hasTypesOrComments(node, firstParam)\n  ) {\n    this.print(firstParam, node, true);\n  } else {\n    this._params(node);\n  }\n\n  this._predicate(node, true);\n  this.space();\n  // When printing (x)/*1*/=>{}, we remove the parentheses\n  // and thus there aren't two contiguous inner tokens.\n  // We forcefully print inner comments here.\n  this.printInnerComments();\n  this.token(\"=>\");\n\n  this.space();\n\n  this.print(node.body, node);\n}\n\nfunction hasTypesOrComments(\n  node: t.ArrowFunctionExpression,\n  param: t.Identifier,\n): boolean {\n  return !!(\n    node.typeParameters ||\n    node.returnType ||\n    node.predicate ||\n    param.typeAnnotation ||\n    param.optional ||\n    // Flow does not support `foo /*: string*/ => {};`\n    param.leadingComments?.length ||\n    param.trailingComments?.length\n  );\n}\n"],"mappings":"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"}